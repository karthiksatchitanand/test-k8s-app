---
name: Build Deploy Artifact
on:
  push

jobs:
  patch-manifests:
    name: Build Deploy Artifact
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with: 
          persist-credentials: false
          fetch-depth: 0

      - name: Get git sha short
        id: vars
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Generate deploy manifest from Jinja template
        uses: cuchi/jinja2-action@v1.1.0
        with: 
          template: tmpl/hello-deploy.j2 
          output_file: deploy/hello-deploy.yaml
          strict: true
          variables: |
            image_deploy_tag=sha-${{ steps.vars.outputs.sha_short }}

      - name: Upload deploy artifact for reuse
        uses: actions/upload-artifact@v1
        with: 
          name: deploy_manifest
          path: hello-deploy.yaml

      - name: Generate service manifest from Jinja template
        uses: cuchi/jinja2-action@v1.1.0
        with: 
          template: tmpl/hello-service.j2 
          output_file: deploy/hello-service.yaml
          strict: true

      - name: Upload service artifact for reuse
        uses: actions/upload-artifact@v1
        with: 
          name: service_manifest
          path: hello-service.yaml

      - name: Commit deploy manifest on local repo 
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -s -m "[skip ci] Generate deployment manifests" 
            
      - name: Push deploy manifests to local repo
        uses: ad-m/github-push-action@master
        with: 
          github_token: ${{ secrets.AUTO_COMMIT_TOKEN }}
  
  push-manifests-to-flux-managed-repo:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ksatchit/test-k8s-deploy 
          ref: master
          path: test-k8s-deploy
          token: ${{ secrets.AUTO_COMMIT_TOKEN }}
          persist-credentials: false
          fetch-depth: 0

      - name: Download saved deploy artifact
        uses: actions/download-artifact@v1
        with:
          name: deploy_manifest

      - name: Download saved service artifact
        uses: actions/download-artifact@v1
        with:
          name: service_manifest

      - name: Copy manifests to deploy folder of managed repo 
        run: |
          ls test-k8s-deploy/
          cp hello-deploy.yaml cp test-k8s-deploy/test-k8s-app/.
          cp hello-service.yaml cp test-k8s-deploy/test-k8s-app/.

      - name: Commit deploy manifest on local repo 
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -s -m "[skip ci] Copy deployment manifests from source" 
            
      - name: Push deploy manifests to local repo
        uses: ad-m/github-push-action@master
        with: 
          github_token: ${{ secrets.REMOTE_COMMIT_TOKEN }}
          repository: ksatchit/test-k8s-deploy
         
  
